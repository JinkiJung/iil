{
    "$id": "https://github.com/JinkiJung/iil/blob/main/iil.schema.json",
    "$version": "1.0.14",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "description": "iil: a process model.",
    "properties": {
        "id": {
            "type": "string",
            "format": "uuid",
            "description": "unique identifier.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "activateIf": {
            "$ref": "#/$defs/Condition",
            "description": "condition that activates this work.",
            "example": {
                "name": "when it is raining"
            }
        },
        "act": {
            "$ref": "#/$defs/Act",
            "description": "a single unit of finite behavior.",
            "example": {
                "name": "close the window"
            }
        },
        "actor": {
            "type": "string",
            "description": "actor who is responsible for performing 'act'.",
            "example": "resident"
        },
        "actDoneIf": {
            "$ref": "#/$defs/Condition",
            "description": "condition under which the task is considered finished.",
            "example": {
                "name": "when the window is tightly closed"
            }
        },
        "goal": {
            "type": "string",
            "format": "uuid",
            "description": "parent work that this work contributes to.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "steps": {
            "type": "array",
            "items": {
                "type": "string",
                "format": "uuid"
            },
            "description": "a list of subtasks that contribute to this work.",
            "example": ["123e4567-e89b-12d3-a456-426614174000"]
        },
        "namespace": {
            "type": "string",
            "description": "a namespace under which the work is categorized.",
            "example": "home management"
        },
        "version": {
            "type": "string",
            "description": "a version number of the work.",
            "example": "1.0.0"
        },
        "info": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": true
            },
            "description": "flexible metadata that can be used to provide information and guide users towards completing a task",
            "example": {
                "description": "close the window",
                "location": "living room"
            }
        },
        "input": {
            "$ref": "#/$defs/DataStore",
            "description": "input required for the work.",
            "example": {
                "weatherForecastURL": "https://api.weather.com/forecast"
            }
        },
        "output": {
            "$ref": "#/$defs/DataStore",
            "description": "output produced by the work.",
            "example": {
                "windowStatus": "closed"
            }
        },
        "variable": {
            "$ref": "#/$defs/DataStore",
            "description": "variables associated with the work.",
            "example": {
                "windowStatus": "open",
                "weather": "sunny"
            }
        },
        "previous": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the work that has activated this work.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "maintainer": {
            "type": "string",
            "description": "ID of maintainer",
            "example": "property management company"
        },
        "owner": {
            "type": "string",
            "description": "ID of owner",
            "example": "home owner"
        },
        "state": {
          	"$ref": "#/$defs/IilState",
            "description": "Current state and reason",
            "example": {
                "state": "INACTIVATED",
                "reason": "waiting for rain"
            }
        },
        "abortIf": {
            "$ref": "#/$defs/Condition",
            "description": "condition of abortion (mostly due to external factor)",
            "example": {
                "name": "when the window is broken"
            }
        },
        "checkout": {
            "$ref": "#/$defs/Next",
            "description": "automated execution of the next work corresponding to the completion of the current work and evaluation of its output",
            "example": {
                "default": [
                    {
                        "flowType": "activate",
                        "fromIil": "123e4567-e89b-12d3-a456-426614174000",
                        "toIil": "123e4567-e89b-12d3-a456-426614174001"
                    }
                ]
            }
        },
        "onAbort": {
            "$ref": "#/$defs/Flow",
            "description": "flow control element",
            "example": {
                "flowType": "activate",
                "fromIil": "123e4567-e89b-12d3-a456-426614174000",
                "toIil": "123e4567-e89b-12d3-a456-426614174001"
            }
        }
    },
    "required": [
        "actDoneIf",
        "act"
    ],
    "$defs": {
        "IilState": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "enum": [
                        "INACTIVATED",
                        "INPUTPENDING",
                        "ACTIVATED",
                        "PENDING",
                        "OUTPUTPENDING",
                        "FINISHED",
                        "ABORTED"
                    ],
                    "description": "a state of iil"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "Act": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "format": "uuid"
                },
                "namespace": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "unique identifier.",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "namespace": {
                    "type": "string",
                    "description": "a namespace under which the condition is categorized.",
                    "example": "weather"
                },
                "version": {
                    "type": "string",
                    "description": "a version number of the condition.",
                    "example": "1.0.0"
                },
                "shortName": {
                    "type": "string",
                    "description": "short name of the condition.",
                    "example": "weather:rain"
                },
                "name": {
                    "type": "string",
                    "description": "name of the condition.",
                    "example": "when it is raining"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Variable",
                        "Time",
                        "Elapsed",
                        "IilState",
                        "Event"
                    ],
                    "description": "type of the condition.",
                    "example": "Variable"
                },
                "code": {
                    "type": "string",
                    "description": "executable code of the condition.",
                    "example": "fetch($weatherForecastURL).then(response => response.json()).then(data => data.weather.includes('rain'));"
                },
                "input": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "external input",
                    "example": {
                        "weatherForecastURL": "https://api.weather.com/forecast"
                    }
                }
            }
        },
        "Next": {
            "type": "object",
            "required": [
                "default"
            ],
            "patternProperties": {
                ".*": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Flow"
                    }
                }
            },
            "description": "automated execution of the next work (as seen in value) when the condition specified by the key is satisfied",
            "example" : {
                "$weather == 'storm": [
                    {
                        "flowType": "activate",
                        "fromIil": "123e4567-e89b-12d3-a456-426614174000",
                        "toIil": "123e4567-e89b-12d3-a456-426614174002"
                    }
                ],
                "default": [
                    {
                        "flowType": "activate",
                        "fromIil": "123e4567-e89b-12d3-a456-426614174000",
                        "toIil": "123e4567-e89b-12d3-a456-426614174001"
                    }
                ]
            },
            "additionalProperties": false
        },
        "Flow": {
            "type": "object",
            "additionalProperties": {
                "type": "object"
            },
            "properties": {
                "flowType": {
                    "type": "string",
                    "enum": [
                        "activateReady",
                        "activate",
                        "create",
                        "report"
                    ],
                    "description": "type of flow",
                    "example": "activate"
                },
                "fromIil": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the work that has activated this work.",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "toIil": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the work that is activated by this work.",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "actorInjection": {
                    "type": "string",
                    "description": "actor who is responsible for performing 'toIil'.",
                    "example": "resident"
                },
                "inputInjection": {
                    "$ref": "#/$defs/DataStore",
                    "description": "input required for the work 'toIil'.",
                    "example": {
                        "weatherForecastURL": "https://api.weather.com/forecast"
                    }
                }
            },
            "description": "flow control element",
            "example": {
                "flowType": "activate",
                "fromIil": "123e4567-e89b-12d3-a456-426614174000",
                "toIil": "123e4567-e89b-12d3-a456-426614174001"
            },
            "required": [
                "flowType",
                "fromIil",
              	"toIil"
            ]
        },
        "DataStore": {
            "type": "object",
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                ]
            },
            "description": "a data store that can be used to store input, output, and variables.",
            "example": {
                "windowStatus": "open"
            }
        }
    }
}
