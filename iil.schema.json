{
    "$id": "https://github.com/JinkiJung/iil/blob/main/iil.schema.json",
    "$version": "1.0.16",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "description": "iil: a process model.",
    "properties": {
        "id": {
            "type": "string",
            "description": "unique identifier with [namespace]:[ULID]",
            "example": "com.company.platform:01H5G6XN89A1XMS3QWJD1PT29T"
        },
        "activateIf": {
            "$ref": "#/$defs/Condition",
            "description": "condition that activates this work.",
            "example": {
                "name": "when it is raining"
            }
        },
        "act": {
            "$ref": "#/$defs/Act",
            "description": "a single unit of finite behavior.",
            "example": {
                "name": "close the window"
            }
        },
        "actor": {
            "type": "string",
            "description": "actor who is responsible for performing 'act'.",
            "example": "resident"
        },
        "actDoneIf": {
            "$ref": "#/$defs/Condition",
            "description": "condition under which the task is considered finished.",
            "example": {
                "name": "when the window is tightly closed"
            }
        },
        "input": {
            "$ref": "#/$defs/DataStore",
            "description": "input required for the work.",
            "example": {
                "weatherForecastURL": "https://api.weather.com/forecast"
            }
        },
        "output": {
            "$ref": "#/$defs/DataStore",
            "description": "output produced by the work.",
            "example": {
                "windowStatus": "closed"
            }
        },
        "goal": {
            "type": "string",
            "description": "parent work that this work contributes to.",
            "example": "com.company.platform:01H5G6XN89A1XMS3QWJD1PT29T"
        },
        "steps": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "a list of subtasks that contribute to this work.",
            "example": [
                "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP",
            ]
        },
        "info": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": true
            },
            "description": "flexible metadata that can be used to provide information and guide users towards completing a task",
            "example": {
                "description": "close the window",
                "location": "living room"
            }
        },
        "previous": {
            "type": "string",
            "description": "ID of the work that has activated this work.",
            "example": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
        },
        "checkout": {
            "$ref": "#/$defs/Next",
            "description": "automated execution of the next work corresponding to the completion of the current work and evaluation of its output",
            "example": [
                {
                    "condition": {
                        "id": "com.company.platform.condition:01H5G6XN89A1XMS3QWJD1PT29V",
                        "name": "If weather is stormy",
                        "type": "Variable",
                        "code": "$weather == 'storm'"
                    },
                    "transitions": [
                        {
                            "type": "activate",
                            "fromIil": "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                            "toIil": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                        }
                    ]
                },
                {
                    "condition": "default",
                    "transitions": [
                        {
                            "type": "activate",
                            "fromIil": "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                            "toIil": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                        }
                    ]
                }
            ]
        },
        "errorHandling": {
            "$ref": "#/$defs/Next",
            "description": "error hadling of current work which consists of condition and transition to other iil",
            "example": {
                    "condition": {
                        "id": "com.company.platform.condition:01H5G6XN89A1XMS3QWJD1PT29V",
                        "name": "when server is down",
                        "type": "Variable",
                        "code": "$response.code != '200'"
                    },
                    "transitions": [
                        {
                            "type": "activate",
                            "fromIil": "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                            "toIil": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                        }
                    ]
                },
        },
        "state": {
            "$ref": "#/$defs/IilState",
            "description": "Current state and reason",
            "example": {
                "state": "INACTIVATED",
                "reason": "waiting for rain"
            }
        }
    },
    "required": [
        "actDoneIf",
        "act"
    ],
    "$defs": {
        "IilState": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "enum": [
                        "INACTIVATED",
                        "INPUTPENDING",
                        "ACTIVATED",
                        "PENDING",
                        "OUTPUTPENDING",
                        "FINISHED",
                        "ABORTED"
                    ],
                    "description": "a state of iil"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "Act": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "format": "uuid"
                },
                "namespace": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "Condition": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "unique identifier with [namespace]:[ULID] format.",
                            "example": "com.company.platform.condition:01H5G6XN89A1XMS3QWJD1PT29V"
                        },
                        "name": {
                            "type": "string",
                            "description": "name of the condition.",
                            "example": "when it is raining"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Variable",
                                "Time",
                                "Elapsed",
                                "IilState",
                                "Event"
                            ],
                            "description": "type of the condition.",
                            "example": "Variable"
                        },
                        "code": {
                            "type": "string",
                            "description": "executable code of the condition.",
                            "example": "fetch($weatherForecastURL).then(response => response.json()).then(data => data.weather.includes('rain'));"
                        },
                        "input": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            },
                            "description": "external input",
                            "example": {
                                "weatherForecastURL": "https://api.weather.com/forecast"
                            }
                        }
                    }
                },
                {
                    "type": "string",
                    "enum": ["default"],
                    "description": "Default condition, used when no other conditions match."
                }
            ]
        },
        "Next": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "condition": {
                        "$ref": "#/$defs/Condition"
                        "description": "Condition that triggers the associated transitions."
                    },
                    "transitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$defs/Transition"
                        },
                        "description": "List of transitions to execute when the condition is met."
                    }
                },
                "required": ["condition", "transitions"]
            }
            "description": "a set of automated transitions when the specified condition is satisfied, with priority determined by the order of the list.",
            "example": [
                {
                    "condition": {
                        "id": "com.company.platform.condition:01H5G6XN89A1XMS3QWJD1PT29V",
                        "name": "If weather is stormy",
                        "type": "Variable",
                        "code": "$weather == 'storm'"
                    },
                    "transitions": [
                        {
                            "type": "activate",
                            "fromIil": "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                            "toIil": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                        }
                    ]
                },
                {
                    "condition": "default",
                    "transitions": [
                        {
                            "type": "activate",
                            "fromIil": "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                            "toIil": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                        }
                    ]
                }
            ],
            "additionalProperties": false
        },
        "Transition": {
            "type": "object",
            "additionalProperties": {
                "type": "object"
            },
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "activateReady",
                        "activate",
                        "create",
                        "report"
                    ],
                    "description": "type of transition",
                    "example": "activate"
                },
                "fromIil": {
                    "type": "string",
                    "description": "ID of the work that has activated this work.",
                    "example": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                },
                "toIil": {
                    "type": "string",
                    "description": "ID of the work that is activated by this work.",
                    "example": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
                },
                "injection": {
                    "type": "string",
                    "description": "actor who is responsible for performing 'toIil'.",
                    "example": "resident"
                },
                "inputInjection": {
                    "$ref": "#/$defs/DataStore",
                    "description": "input required for the work 'toIil'.",
                    "example": {
                        "weatherForecastURL": "https://api.weather.com/forecast"
                    }
                }
            },
            "description": "transition control element",
            "example": {
                "type": "activate",
                "fromIil": "com.company.platform:01JPGA97JA0PT6F4BSVT149EAW",
                "toIil": "com.company.platform:01JPGA9RH04G2BHE8Q89YG28QP"
            },
            "required": [
                "type",
                "fromIil",
                "toIil"
            ]
        },
        "DataStore": {
            "type": "object",
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                ]
            },
            "description": "a data store that can be used to store input, output, and variables.",
            "example": {
                "windowStatus": "open"
            }
        }
    }
}
